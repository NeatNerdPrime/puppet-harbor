<%- |
  $cfg_version,
  $hostname,
  $ui_url_protocol,
  $max_job_workers,
  $absolute_url,
  $customize_crt,
  $ssl_cert,
  $ssl_cert_key,
  $internal_tls,
  $internal_tls_dir,
  $secretkey_path,
  $external_url,
  $log_level,
  $log_rotate_count,
  $log_rotate_size,
  $log_location,
  $log_external_endpoint,
  $log_external_endpoint_protocol,
  $log_external_endpoint_host,
  $log_external_endpoint_port,
  $http_proxy,
  $https_proxy,
  $no_proxy,
  $data_volume,
  $harbor_admin_password,
  $db_host,
  $db_password,
  $db_port,
  $db_user,
  $db_max_idle_connections,
  $db_max_open_conns,
  $external_redis,
  $redis_host,
  $redis_port,
  $redis_password,
  $redis_registry_db_index,
  $redis_jobservice_db_index,
  $redis_chartmuseum_db_index,
  $redis_clair_db_index,
  $trivy_ignore_unfixed,
  $trivy_skip_update,
  $trivy_insecure,
  $trivy_github_token,
  $clair_db_host,
  $clair_db_password,
  $clair_db_port,
  $clair_db_username,
  $clair_db,
  $clair_updaters_interval,
  $uaa_ca_cert,
  $registry_storage_provider_name,
  $registry_storage_provider_config,
  $registry_custom_ca_bundle,
  $reload_config,
  $skip_reload_env_pattern,
  $webhook_job_max_retry,
  $metrics,
  $metrics_port,
  $metrics_path,
| -%>
# Configuration file of Harbor

# The IP address or hostname to access admin UI and registry service.
# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.
hostname: <%= $hostname %>

# http related config
http:
  # port for http, default is 80. If https enabled, this port will redirect to https port
  port: 80

<% if $ui_url_protocol == 'https' { -%>
# https related config
https:
  # https port for harbor, default is 443
  port: 443
  # The path of cert and key files for nginx
  certificate: <%= $ssl_cert %>
  private_key: <%= $ssl_cert_key %>
<% } %>

<%- if $internal_tls { -%>
# # Uncomment following will enable tls communication between all harbor components
internal_tls:
#   # set enabled to true means internal tls is enabled
  enabled: true
#   # put your cert and key files on dir
  dir: <%= $internal_tls_dir %>
<%- } -%>

<% if ! empty($external_url) { -%>
# Uncomment external_url if you want to enable external proxy
# And when it enabled the hostname will no longer used
external_url: <%= $external_url %>
<% } -%>

# The initial password of Harbor admin
# It only works in first time to install harbor
# Remember Change the admin password from UI after launching Harbor.
harbor_admin_password: <%= $harbor_admin_password %>

# Harbor DB configuration
database:
  # The password for the root user of Harbor DB. Change this before any production use.
  password: <%= $db_password %>
  # The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained.
  max_idle_conns: <%= $db_max_idle_connections %>
  # The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections.
  # Note: the default number of connections is 100 for postgres.
  max_open_conns: <%= $db_max_open_conns %>

# The default data volume
data_volume: <%= $data_volume %>

# Harbor Storage settings by default is using /data dir on local filesystem
# Uncomment storage_service setting If you want to using external storage
# storage_service:
#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore
#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.
#   ca_bundle:

#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss
#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/
#   filesystem:
#     maxthreads: 100
#   # set disable to true when you want to disable registry redirect
#   redirect:
#     disabled: false

# Trivy configuration
#
# Trivy DB contains vulnerability information from NVD, Red Hat, and many other upstream vulnerability databases.
# It is downloaded by Trivy from the GitHub release page https://github.com/aquasecurity/trivy-db/releases and cached
# in the local file system. In addition, the database contains the update timestamp so Trivy can detect whether it
# should download a newer version from the Internet or use the cached one. Currently, the database is updated every
# 12 hours and published as a new release to GitHub.
trivy:
  # ignoreUnfixed The flag to display only fixed vulnerabilities
  ignore_unfixed: <%= $trivy_ignore_unfixed %>
  # skipUpdate The flag to enable or disable Trivy DB downloads from GitHub
  #
  # You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues.
  # If the flag is enabled you have to download the `trivy-offline.tar.gz` archive manually, extract `trivy.db` and
  # `metadata.json` files and mount them in the `/home/scanner/.cache/trivy/db` path.
  skip_update: <%= $trivy_skip_update %>
  #
  # insecure The flag to skip verifying registry certificate
  insecure: <%= $trivy_insecure %>
  # github_token The GitHub access token to download Trivy DB
  #
  # Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough
  # for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000
  # requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult
  # https://developer.github.com/v3/#rate-limiting
  #
  # You can create a GitHub token by following the instructions in
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
  #
  <%- if $trivy_github_token { -%>
  github_token: <%= $trivy_github_token %>
  <%- } -%>

# Clair configuration
clair: 
  # The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.
  updaters_interval: <%= $clair_updaters_interval %>

jobservice:
  # Maximum number of job workers in job service  
  max_job_workers: <%= $max_job_workers %>

notification:
  webhook_job_max_retry: <%= $webhook_job_max_retry %>

chart:
  # Change the value of absolute_url to enabled can enable absolute url in chart
  absolute_url: <%= absolute_url %>

# Log configurations
log:
  # options are debug, info, warning, error, fatal
  level: <%= $log_level %>
  # configs for logs in local storage
  local:
    # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.
    rotate_count: <%= $log_rotate_count %>
    # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes. 
    # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G 
    # are all valid.
    rotate_size: <%= $log_rotate_size %>
    # The directory on your host that store log
    location: <%= $log_location %>

  # Uncomment following lines to enable external syslog endpoint.
<%- if $log_external_endpoint { -%>
  external_endpoint:
  #   # protocol used to transmit log to external endpoint, options is tcp or udp
    protocol: <%= $log_external_endpoint_protocol %>
  #   # The host of external endpoint
    host: <%= $log_external_endpoint_host %>
  #   # Port of external endpoint
    port: <%= $log_external_endpoint_port %>
<%- } -%>

#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!
_version: <%= $cfg_version %>

# Uncomment external_database if using external database. Currently only support POSTGRES. 
# Four databases are needed to be create first by users for Harbor core, Clair, Notary server 
# and Notary signer. And the tables will be generated automatically when Harbor starting up.
# NOTE: external_database is unable to custom attributes individually, you must do them in block.
# external_database:
#   harbor:
#     host: harbor_db_host
#     port: harbor_db_port
#     db_name: harbor_db_name
#     username: harbor_db_username
#     password: harbor_db_password
#     ssl_mode: disable
#   clair:
#     host: clair_db_host
#     port: clair_db_port
#     db_name: clair_db_name
#     username: clair_db_username
#     password: clair_db_password
#     ssl_mode: disable
#   notary_signer:
#     host: notary_signer_db_host
#     port: notary_signer_db_port
#     db_name: notary_signer_db_name
#     username: notary_signer_db_username
#     password: notary_signer_db_password
#     ssl_mode: disable
#   notary_server:
#     host: notary_server_db_host
#     port: notary_server_db_port
#     db_name: notary_server_db_name
#     username: notary_server_db_username
#     password: notary_server_db_password
#     ssl_mode: disable

<% if $external_redis == 'true' { -%>
# Uncomment external_redis if using external Redis server
external_redis:
  host: <%= $redis_host %>
  port: <%= $redis_port %>
  password: <%= $redis_password %>
  # db_index 0 is for core, it's unchangeable
  registry_db_index: <%= $redis_registry_db_index %>
  jobservice_db_index: <%= $redis_jobservice_db_index %>
  chartmuseum_db_index: <%= $redis_chartmuseum_db_index %>
  clair_db_index: <%= $redis_clair_db_index %>
<% } %>

<% if ! empty($uaa_ca_cert) { -%>
# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.
uaa:
  ca_file: <%= $uaa_ca_cert %>
<% } %>

# Global proxy
# Config http proxy for components, e.g. http://my.proxy.com:3128
# Components doesn't need to connect to each others via http proxy.
# Remove component from `components` array if want disable proxy
# for it. If you want use proxy for replication, MUST enable proxy
# for core and jobservice, and set `http_proxy` and `https_proxy`.
# Add domain to the `no_proxy` field, when you want disable proxy
# for some special registry.
proxy:
  http_proxy: <%= $http_proxy %>
  https_proxy: <%= $https_proxy %>
  # no_proxy endpoints will appended to 127.0.0.1,localhost,.local,.internal,log,db,redis,nginx,core,portal,postgresql,jobservice,registry,registryctl,clair,chartmuseum,notary-server
  no_proxy: <%= $no_proxy %>
  components:
    - core
    - jobservice
    - clair
<%- if $metrics { -%>
metric:
  enabled: true
  port: <%= $metrics_port %>
  path: <%= $metrics_path %>
<%- } -%>
